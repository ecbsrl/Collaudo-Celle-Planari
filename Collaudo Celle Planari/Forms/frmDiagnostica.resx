<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tmrMonitor.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnUscita.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>